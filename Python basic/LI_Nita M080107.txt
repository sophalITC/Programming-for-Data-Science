### Question 1
Level 1

Question:
Write a program which will find all such numbers which are divisible by 7 but are not a multiple of 5, between 2000 and 3200 (both included).
The numbers obtained should be printed in a comma-separated sequence on a single line.

Hints: 
Consider use range(#begin, #end) method

Answer 1:
for i in range(2000,3201):
    if (i%7==0) and (i%5!=0):
        print(i,end=',')

### Question 2
Level 1

Question:
Write a program which can compute the factorial of a given numbers.
The results should be printed in a comma-separated sequence on a single line.
Suppose the following input is supplied to the program:
8
Then, the output should be:
40320

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.

Answer 2:
num = int(input('Enter a number: '))
num=8
result=[]
fact=1

if fact<0:
    print('Sorry, factorial does not exist for negative numbers')
elif fact==0:
    print('Factorial of 0 is 1')
else:
    for i in range(1,num+1):
        fact=fact*i
        result.append(fact)
print('The factorial of ',num,'is ',result)


### Question 3
Level 1

Question:
With a given integral number n, write a program to generate a dictionary that contains (i, i*i) such that is an integral number between 1 and n (both included). and then the program should print the dictionary.
Suppose the following input is supplied to the program:
8
Then, the output should be:
{1: 1, 2: 4, 3: 9, 4: 16, 5: 25, 6: 36, 7: 49, 8: 64}

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.
Consider use dict()

Answer 3:
num=int(input('Enter an interger number: '))
dict={}
for i in range(1,num+1):
    dict_new={i:i*i}
    dict.update(dict_new)
print(dict)


### Question 4
Level 1

Question:
Write a program which accepts a sequence of comma-separated numbers from console and generate a list and a tuple which contains every number.
Suppose the following input is supplied to the program:
34,67,55,33,12,98
Then, the output should be:
['34', '67', '55', '33', '12', '98']
('34', '67', '55', '33', '12', '98')

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.
tuple() method can convert list to tuple
Answer 4:

num = input("Enter numbers seperated only by a comma :")
numbers_split = num.split(',')

number_tuple = tuple(numbers_split)

print(numbers_split)
print(number_tuple)



### Question 5
Level 1

Question:
Define a class which has at least two methods:
getString: to get a string from console input
printString: to print the string in upper case.
Also please include simple test function to test the class methods.

Hints:
Use __init__ method to construct some parameters

Answer 5:
class myclass():
    def __init__(self):
        self.str1=''
    def getString(self):
        self.str1=input('Enter String:')
    def printString(self):
        print(self.str1.upper())
        
str1=myclass()
str1.getString()
str1.printString()


### Question 6
Level 2

Question:
Write a program that calculates and prints the value according to the given formula:
Q = Square root of [(2 * C * D)/H]
Following are the fixed values of C and H:
C is 50. H is 30.
D is the variable whose values should be input to your program in a comma-separated sequence.
Example
Let us assume the following comma separated input sequence is given to the program:
100,150,180
The output of the program should be:
18,22,24

Hints:
If the output received is in decimal form, it should be rounded off to its nearest value (for example, if the output received is 26.0, it should be printed as 26)
In case of input data being supplied to the question, it should be assumed to be a console input. 

Answer 6:
import math

numbers = input("Provide D: ")
numbers = numbers.split(',')

result_list = []
for D in numbers:
    Q = round(math.sqrt(2 * 50 * int(D) / 30))
    result_list.append(Q)

print(result_list)


### Question 7
Level 2

Question:
Write a program which takes 2 digits, X,Y as input and generates a 2-dimensional array. The element value in the i-th row and j-th column of the array should be i*j.
Note: i=0,1.., X-1; j=0,1,¡­Y-1.
Example
Suppose the following inputs are given to the program:
3,5
Then, the output of the program should be:
[[0, 0, 0, 0, 0], [0, 1, 2, 3, 4], [0, 2, 4, 6, 8]] 

Hints:
Note: In case of input data being supplied to the question, it should be assumed to be a console input in a comma-separated form.

Answer 7:

x=int(input("Row:"))
y=int(input("Column:"))
matrix=[[0 for col in range(y)] for row in range(x)]
for row in range(x):
    for col in range(y):
        matrix[row][col]=row*col
print(matrix)

### Question 8
Level 2

Question:
Write a program that accepts a comma separated sequence of words as input and prints the words in a comma-separated sequence after sorting them alphabetically.
Suppose the following input is supplied to the program:
without,hello,bag,world
Then, the output should be:
bag,hello,without,world

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.

Answer 8:
phrase = input("Input comma seperated sequence of words: ")

phrase_list = phrase.split(",")
phrase_list.sort()
print((', ').join(phrase_list))


### Question 9
Level 2

Question£º
Write a program that accepts sequence of lines as input and prints the lines after making all characters in the sentence capitalized.
Suppose the following input is supplied to the program:
Hello world
Practice makes perfect
Then, the output should be:
HELLO WORLD
PRACTICE MAKES PERFECT

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.

Answer 9:
from string import *

lines = []
print("Enter sentences: ")

while True:
    line = input("> ")
    if not line:
        break
    lines.append(line.upper())

print(lines)


### Question 10
Level 2

Question:
Write a program that accepts a sequence of whitespace separated words as input and prints the words after removing all duplicate words and sorting them alphanumerically.
Suppose the following input is supplied to the program:
hello world and practice makes perfect and hello world again
Then, the output should be:
again and hello makes perfect practice world

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.
We use set container to remove duplicated data automatically and then use sorted() to sort the data.

Answer 10:

a=input("Enter sequence of words : ")
b=sorted(set(a.split(" ")))
print((" ").join(b))

### Question 11
Level 2

Question:
Write a program which accepts a sequence of comma separated 4 digit binary numbers as its input and then check whether they are divisible by 5 or not. The numbers that are divisible by 5 are to be printed in a comma separated sequence.
Example:
0100,0011,1010,1001
Then the output should be:
1010
Notes: Assume the data is input by console.

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.

Answer 11:
value = []
items=[x for x in input().split(',')]
for i in items:
    int_i = int(i,2)
    if not int_i%5:
        value.append(i)

print(','.join(value))



### Question 12
Level 2

Question:
Write a program, which will find all such numbers between 1000 and 3000 (both included) such that each digit of the number is an even number.
The numbers obtained should be printed in a comma-separated sequence on a single line.

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.

Answer 12:
ans = []

for num in range(1000,3001):

    num_str = str(num)
    b = True

    for x in num_str:
        if int(x) % 2:
            b = False
            break
    if b:
        ans.append(str(num))

print(",".join(ans))


### Question 13
Level 2

Question:
Write a program that accepts a sentence and calculate the number of letters and digits.
Suppose the following input is supplied to the program:
hello world! 123
Then, the output should be:
LETTERS 10
DIGITS 3

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.

Answer 13:

phrase = input("Type in: ")
phrase = list(phrase)

l, d = 0, 0
for i in phrase:
    if i.isalpha():
        l = l + 1
    if i.isdigit():
        d = d + 1
    else:
        pass

print("Letters:", l)
print("Digits:", d)


### Question 14
Level 2

Question:
Write a program that accepts a sentence and calculate the number of upper case letters and lower case letters.
Suppose the following input is supplied to the program:
Hello world!
Then, the output should be:
UPPER CASE 1
LOWER CASE 9

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.

Answer 14:

phrase = input("Type in: ")
phrase = list(phrase)

u, l = 0, 0
for i in phrase:
    if i.isupper():
        u = u + 1
    if i.islower():
        l = l + 1
    else:
        pass

print("UPPER:", u)
print("lower:", l)


### Question 15
Level 2

Question:
Write a program that computes the value of a+aa+aaa+aaaa with a given digit as the value of a.
Suppose the following input is supplied to the program:
9
Then, the output should be:
11106

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.

Answer 15:

value = input("Enter value: ")

n1 = value * 1
n2 = value * 2
n3 = value * 3
n4 = value * 4

total = int(n1) + int(n2) + int(n3) + int(n4)
print(total)


### Question 16
Level 2

Question:
Use a list comprehension to square each odd number in a list. The list is input by a sequence of comma-separated numbers.
Suppose the following input is supplied to the program:
1,2,3,4,5,6,7,8,9
Then, the output should be:
1,3,5,7,9

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.

Answer 16:

numbers = input("Type in: ")
#numbers = numbers.split(',')

odd_list = [i for i in numbers.split(',') if (int(i) % 2 != 0)]
print((" ").join(odd_list))


### Question 17
Level 2

Question:
Write a program that computes the net amount of a bank account based a transaction log from console input. The transaction log format is shown as following:
D 100
W 200

D means deposit while W means withdrawal.
Suppose the following input is supplied to the program:
D 300
D 300
W 200
D 100
Then, the output should be:
500

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.

Answer 17:
net_Amount = 0
while True:
    s = input("enter the operation and then amount")
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        net_Amount+=amount
    elif operation=="W":
        net_Amount-=amount
    else:
        pass
print(net_Amount)


### Question 18
Level 3

Question:
A website requires the users to input username and password to register. Write a program to check the validity of password input by users.
Following are the criteria for checking the password:
1. At least 1 letter between [a-z]
2. At least 1 number between [0-9]
1. At least 1 letter between [A-Z]
3. At least 1 character from [$#@]
4. Minimum length of transaction password: 6
5. Maximum length of transaction password: 12
Your program should accept a sequence of comma separated passwords and will check them according to the above criteria. Passwords that match the criteria are to be printed, each separated by a comma.
Example
If the following passwords are given as input to the program:
ABd1234@1,a F1#,2w3E*,2We3345
Then, the output of the program should be:
ABd1234@1

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.

Answer 18:
import re

passwords = input("Type in: ")
passwords = passwords.split(",")

accepted_pass = []
for i in passwords:
    
    if len(i) < 6 or len(i) > 12:
        continue

    elif not re.search("([a-z])+", i):
        continue

    elif not re.search("([A-Z])+", i):
        continue

    elif not re.search("([0-9])+", i):
        continue

    elif not re.search("([!@$%^&])+", i):
        continue

    else:
        accepted_pass.append(i)

print((" ").join(accepted_pass))


### Question 19
Level 3

Question:
You are required to write a program to sort the (name, age, height) tuples by ascending order where name is string, age and height are numbers. The tuples are input by console. The sort criteria is:
1: Sort based on name;
2: Then sort based on age;
3: Then sort by score.
The priority is that name > age > score.
If the following tuples are given as input to the program:
Tom,19,80
John,20,90
Jony,17,91
Jony,17,93
Json,21,85
Then, the output of the program should be:
[('John', '20', '90'), ('Jony', '17', '91'), ('Jony', '17', '93'), ('Json', '21', '85'), ('Tom', '19', '80')]

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.
We use itemgetter to enable multiple sort keys.

Answer 19:
info = input()
info_list = [case.split(',') for case in info.split(' ')] 
print(sorted(info_list))


### Question 20
Level 3

Question:
Define a class with a generator which can iterate the numbers, which are divisible by 7, between a given range 0 and n.

Hints:
Consider use yield

Answer 20:

def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

### Question 21
Level 3

Question
A robot moves in a plane starting from the original point (0,0). The robot can move toward UP, DOWN, LEFT and RIGHT with a given steps. The trace of robot movement is shown as the following:
UP 5
DOWN 3
LEFT 3
RIGHT 2
¡­
The numbers after the direction are steps. Please write a program to compute the distance from current position after a sequence of movement and original point. If the distance is a float, then just print the nearest integer.
Example:
If the following tuples are given as input to the program:
UP 5
DOWN 3
LEFT 3
RIGHT 2
Then, the output of the program should be:
2

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.

Answer 21:
import math

x, y = 0, 0

while True:
    step = input("Type in UP/DOWN/LEFT/RIGHT #step number: ")

    if step == "":
        break

    else:
        step = step.split(" ")

        if step[0] == "UP":
            y = y + int(step[1])
        elif step[0] == "DOWN":
            y = y - int(step[1])
        elif step[0] == "LEFT":
            x = x - int(step[1])
        elif step[0] == "RIGHT":
            x = x + int(step[1])

c = math.sqrt(x**2 + y**2)

print("Distance:", c)

### Question 22
Level 3

Question:
Write a program to compute the frequency of the words from the input. The output should output after sorting the key alphanumerically. 
Suppose the following input is supplied to the program:
New to Python or choosing between Python 2 and Python 3? Read Python 2 or Python 3.
Then, the output should be:
2:2
3.:1
3?:1
New:1
Python:5
Read:1
and:1
between:1
choosing:1
or:2
to:1

Hints
In case of input data being supplied to the question, it should be assumed to be a console input.
Answer 22:
def frequency(input):
    freq = {}

    for word in input.split():
        freq[word] = freq.get(word, 0) + 1

    words = list(freq.keys())
    words.sort()

    for w in words:
        print(f'{w}:{freq[w]}')

### Question 23
level 1

Question:
Write a method which can calculate square value of number

Hints:
Using the ** operator

Answer 23:
digit=int(input("Enter an integer number: "))
square=digit*digit
print(f"Square of {digit} is {square}")

### Question 24
Level 1

Question:

Python has many built-in functions, and if you do not know how to use it, you can read document online or find some books. But Python has a built-in document function for every built-in functions.

Please write a program to print some Python built-in functions documents, such as abs(), int(), raw_input()

And add document for your own function
Hints:
The built-in document method is __doc__

Answer 24:
def absolute(number):
    return abs(number)

print absolute(int(raw_input('Enter Number :')))

print(abs.__doc__)
print(int.__doc__)
print(raw_input.__doc__)

### Question 25
Level 1

Question:
Define a class, which have a class parameter and have a same instance parameter.

Hints:
Define a instance parameter, need add it in __init__ method
You can init a object with construct parameter or set the value later

Answer 25:
class Person:
    name = "Person"
    def __init__(self, name = None):
        self.name = name

nita = Person("Nita")
print("%s name is %s" % (Person.name, nita.name))

haneen = Person()
haneen.name = "Haneen"
print("%s name is %s" % (Person.name, haneen.name))



### Question 26:
Define a function which can compute the sum of two numbers.

Hints:
Define a function with two numbers as arguments. You can compute the sum in the function and return the value.

Answer 26:
def SumFunction(number1, number2):
    return number1 + number2

print(SumFunction(1,2))

```

### Question 27
Define a function that can convert a integer into a string and print it in console.

Hints:

Use str() to convert a number to string.

Answer 27:
def printValue(n):
    print(str(n))

printValue(27)


### Question 28
Define a function that can convert a integer into a string and print it in console.

Hints:

Use str() to convert a number to string.
Answer 28:
def printValue(n):
    print(str(n))

printValue(28)


### Question 29
Define a function that can receive two integral numbers in string form and compute their sum and then print it in console.

Hints:

Use int() to convert a string to integer.

Answer 29:
def printValue(x,y):
    print(int(x) + int(y))
printValue("2","9")

### Question 30
Define a function that can accept two strings as input and concatenate them and then print it in console.

Hints:

Use + to concatenate the strings

Answer 30:
def value(m,n):
    print(m + n)

value("3","0") 

### Question 31
Define a function that can accept two strings as input and print the string with maximum length in console. If two strings have the same length, then the function should print al l strings line by line.

Hints:

Use len() function to get the length of a string

Answer 31:
def value(m,n):
    len1 = len(m)
    len2 = len(n)
    if len1 > len2:
        print (m)
    elif len2 > len1:
        print (n)
    else:
        print (m)
        print (n)

value("two","three")

### Question 32
Define a function that can accept an integer number as input and print the "It is an even number" if the number is even, otherwise print "It is an odd number".

Hints:

Use % operator to check if a number is even or odd.

Answer 32:
def value(n):
    if n%2==0:
        print('It is an even number')
    else:
        print('It is an odd number')
value(30)

### Question 33
Define a function which can print a dictionary where the keys are numbers between 1 and 3 (both included) and the values are square of keys.

Hints:

Use dict[key]=value pattern to put entry into a dictionary.
Use ** operator to get power of a number.

Answer 33:
def value_Dict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)
value_Dict()

### Question 34
Define a function which can print a dictionary where the keys are numbers between 1 and 20 (both included) and the values are square of keys.

Hints:

Use dict[key]=value pattern to put entry into a dictionary.
Use ** operator to get power of a number.
Use range() for loops.

Answer 34:
def value_Dict():
    d=dict()
    for i in range(1,21):
        d[i]=i**2
    print(d)
value_Dict()

### Question 35
Define a function which can generate a dictionary where the keys are numbers between 1 and 20 (both included) and the values are square of keys. The function should just print the values only.

Hints:

Use dict[key]=value pattern to put entry into a dictionary.
Use ** operator to get power of a number.
Use range() for loops.
Use keys() to iterate keys in the dictionary. Also we can use item() to get key/value pairs.
Answer 35:
def dictionary():
    d=dict()
    for i in range(1,21):
        d[i]=i**2
    for (key,value) in d.items():
        print(value)
dictionary()

### Question 36
Define a function which can generate a dictionary where the keys are numbers between 1 and 20 (both included) and the values are square of keys. The function should just print the keys only.

Hints:

Use dict[key]=value pattern to put entry into a dictionary.
Use ** operator to get power of a number.
Use range() for loops.
Use keys() to iterate keys in the dictionary. Also we can use item() to get key/value pairs.

Answer 36:
def dictionary():
    d=dict()
    for i in range(1,21):
        d[i]=i**2
    for (key,value) in d.items():
        print(key)
dictionary()

### Question 37
Define a function which can generate and print a list where the values are square of numbers between 1 and 20 (both included).

Hints:

Use ** operator to get power of a number.
Use range() for loops.
Use list.append() to add values into a list.
Answer 37:
def valueList():
    l=list()
    for i in range(1,21):
        l.append(i**2)
    print(l)
    
valueList()


### Question 38
Define a function which can generate a list where the values are square of numbers between 1 and 20 (both included). Then the function needs to print the first 5 elements in the list.

Hints:

Use ** operator to get power of a number.
Use range() for loops.
Use list.append() to add values into a list.
Use [n1:n2] to slice a list

Answer 38:
def valueList():
    l=list()
    for i in range(1,21):
        l.append(i**2)
    print(l[:5])
valueList()


### Question 39
Define a function which can generate a list where the values are square of numbers between 1 and 20 (both included). Then the function needs to print the last 5 elements in the list.

Hints:

Use ** operator to get power of a number.
Use range() for loops.
Use list.append() to add values into a list.
Use [n1:n2] to slice a list

Answer 39:
def valueList():
    l=list()
    for i in range(1,21):
        l.append(i**2)
    print(l[:5])
valueList()

### Question 40
Define a function which can generate a list where the values are square of numbers between 1 and 20 (both included). Then the function needs to print all values except the first 5 elements in the list.

Hints:

Use ** operator to get power of a number.
Use range() for loops.
Use list.append() to add values into a list.
Use [n1:n2] to slice a list

Answer 40:
def valueList():
    l=list()
    for i in range(1,21):
        l.append(i**2)
    print(l[5:])
valueList()

### Question 41
Define a function which can generate and print a tuple where the value are square of numbers between 1 and 20 (both included). 

Hints:

Use ** operator to get power of a number.
Use range() for loops.
Use list.append() to add values into a list.
Use tuple() to get a tuple from a list.

Answer 41:
def value():
    l=list()
    for i in range(1,21):
        l.append(i**2)
    print(tuple(l))
value()


### Question 42
With a given tuple (1,2,3,4,5,6,7,8,9,10), write a program to print the first half values in one line and the last half values in one line. 

Hints:

Use [n1:n2] notation to get a slice from a tuple.

Answer 42:
t=(1,2,3,4,5,6,7,8,9,10)
t1=t[:5]
t2=t[5:]
print(t1)
print(t2)

### Question 43
Write a program to generate and print another tuple whose values are even numbers in the given tuple (1,2,3,4,5,6,7,8,9,10). 

Hints:

Use "for" to iterate the tuple
Use tuple() to generate a tuple from a list.

Answer 43:
num = (1,2,3,4,5,6,7,8,9,10)
tpl = tuple(i for i in num if i%2 == 0)
print(tpl)

### Question 44
Write a program which accepts a string as input to print "Yes" if the string is "yes" or "YES" or "Yes", otherwise print "No". 

Hints:

Use if statement to judge condition.

Answer 44:
i=input()
if i=='yes' or i=='YES' or i=='Yes':
    print("Yes")
else:
    print("No")
    
### Question 45
Write a program which can filter even numbers in a list by using filter function. The list is: [1,2,3,4,5,6,7,8,9,10].

Hints:

Use filter() to filter some elements in a list.
Use lambda to define anonymous functions.

Answer 45:
num = [1,2,3,4,5,6,7,8,9,10]
even = list(filter(lambda x: x%2==0, num))
print(even)

### Question 46
Write a program which can map() to make a list whose elements are square of elements in [1,2,3,4,5,6,7,8,9,10].

Hints
Use map() to generate a list.
Use lambda to define anonymous functions.
Answer 46:
num = [1,2,3,4,5,6,7,8,9,10]
squared = list(map(lambda x: x**2, num))
print(squared)

### Question 47
Write a program which can map() and filter() to make a list whose elements are square of even number in [1,2,3,4,5,6,7,8,9,10].

Hints
Use map() to generate a list.
Use filter() to filter elements of a list.
Use lambda to define anonymous functions.

Answer 47:
num = [1,2,3,4,5,6,7,8,9,10]
even = map(lambda x: x**2, filter(lambda x: x%2==0, num))
print(list(even))

### Question 48
Write a program which can filter() to make a list whose elements are even number between 1 and 20 (both included).

Hints:

Use filter() to filter elements of a list.
Use lambda to define anonymous functions.
Answer 48:
even = filter(lambda x: x%2==0, range(1,21))
print(list(even))

### Question 49
Write a program which can map() to make a list whose elements are square of numbers between 1 and 20 (both included).

Hints
Use map() to generate a list.
Use lambda to define anonymous functions.
Answer 49:

square=map(lambda x: x**2, range(1,21))
print(list(square))


### Question 50
Define a class named American which has a static method called printNationality.

Hints:
Use @staticmethod decorator to define class static method.

Answer 50:
class American():
    @staticmethod
    def printNationality():
        print("I am an American")

american = American()
american.printNationality()    

American.printNationality()



### Question 51
Define a class named American and its subclass NewYorker. 

Hints:

Use class Subclass(ParentClass) to define a subclass.

Answer 51:
class American():
    pass

class NewYorker(American):
    pass

american = American()
newyorker = NewYorker()

print(american)
print(newyorker)


### Question 52
Define a class named Circle which can be constructed by a radius. The Circle class has a method which can compute the area. 

Hints:

Use def methodName(self) to define a method.
Answer 52:
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

a_Circle = Circle(2)
print(a_Circle.area())

### Question 53
Define a class named Rectangle which can be constructed by a length and width. The Rectangle class has a method which can compute the area. 

Hints:

Use def methodName(self) to define a method.
Answer 53:
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

a_Rectangle = Rectangle(10,3)
print(a_Rectangle.area())


### Question 54
Define a class named Shape and its subclass Square. The Square class has an init function which takes a length as argument. Both classes have a area function which can print the area of the shape where Shape's area is 0 by default.

Hints:

To override a method in super class, we can define a method with the same name in the super class.

Answwer 54:

class Shape():
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self,length = 0):
        Shape.__init__(self)
        self.length = length

    def area(self):
        return self.length*self.length

sqr = Square(5)
print(sqr.area())      

print(Square().area())

### Question 55
Please raise a RuntimeError exception.

Hints:

Use raise() to raise an exception.

Answer 55:

raise RuntimeError('something is wrong')

### Question 56
Write a function to compute 5/0 and use try/except to catch the exceptions.

Hints:

Use try/except to catch exceptions.
Answer 56:
def divide():
    return 5/0

try:
    divide()
except:
    print("No number can be devided by zero")

### Question 57
Define a custom exception class which takes a string message as attribute.

Hints:

To define a custom exception, we need to define a class inherited from Exception.

Answer 57:
class CustomException(Exception):

    def __init__(self, message):
        self.message = message

num = int(input())

try:
    if num < 10:
        raise CustomException("The number is less than 10")
    elif num > 10:
        raise CustomException("The number is grater than 10")
except CustomException as ce:
    print("The error raised: " + ce.message)


### Question 58
Assuming that we have some email addresses in the "username@companyname.com" format, please write program to print the user name of a given email address. Both user names and company names are composed of letters only.

Example:
If the following email address is given as input to the program:

john@google.com

Then, the output of the program should be:

john

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.


Answer 58:
import re
emailAddress = input("Input email adress: ")
pattern = "(\w+)@((\w+\.)+(com))"
r = re.match(pattern,emailAddress)
print(r.group(1))

### Question 59
Assuming that we have some email addresses in the "username@companyname.com" format, please write program to print the company name of a given email address. Both user names and company names are composed of letters only.

Example:
If the following email address is given as input to the program:

john@google.com

Then, the output of the program should be:

google

In case of input data being supplied to the question, it should be assumed to be a console input.

Hints:

Use \w to match letters.

Answer 59:
import re
emailAddress = input("Input email adress: ")
pattern = "(\w+)@(\w+)\.(com)"
r2 = re.match(pattern,emailAddress)
print(r2.group(2))

### Question 60
Write a program which accepts a sequence of words separated by whitespace as input to print the words composed of digits only.

Example:
If the following words is given as input to the program:

2 cats and 3 dogs.

Then, the output of the program should be:

['2', '3']

In case of input data being supplied to the question, it should be assumed to be a console input.

Hints:

Use re.findall() to find all substring using regex.

Answer 60:
import re

message = input()
pattern = "\d+"
ans = re.findall(pattern,message)
print(ans)