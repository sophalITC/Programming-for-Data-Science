### Question 1
Level 1

Question:
Write a program which will find all such numbers which are divisible by 7 but are not a multiple of 5, between 2000 and 3200 (both included).
The numbers obtained should be printed in a comma-separated sequence on a single line.

Hints: 
Consider use range(#begin, #end) method

Solution:
multiple_7_not_mul_5 = [i for i in range(2000, 3201) if i % 7 == 0 and i % 5 != 0]
print(multiple_7_not_mul_5)


### Question 2
Level 1

Question:
Write a program which can compute the factorial of a given numbers.
The results should be printed in a comma-separated sequence on a single line.
Suppose the following input is supplied to the program:
8
Then, the output should be:
40320

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.

Solution:
def factorial(n):
    """ 
    This program is used to calculate the factorial of n
    n: integer
    factorial(n): integer
    """
    if n == 0:
        return 1
    else:
        return n * factorial(n-1)

n = int(input("Enter the number you want to calculate its factorial: "))
print(f"{n}! = {factorial(n)}")


### Question 3
Level 1

Question:
With a given integral number n, write a program to generate a dictionary that contains (i, i*i) such that is an integral number between 1 and n (both included). and then the program should print the dictionary.
Suppose the following input is supplied to the program:
8
Then, the output should be:
{1: 1, 2: 4, 3: 9, 4: 16, 5: 25, 6: 36, 7: 49, 8: 64}

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.
Consider use dict()

Solution:
def square_dict(n):
    return {i: i*i for i in range(1, n+1)}

n = int(input("Please enter an integer: "))
print(square_dict(n))


### Question 4
Level 1

Question:
Write a program which accepts a sequence of comma-separated numbers from console and generate a list and a tuple which contains every number.
Suppose the following input is supplied to the program:
34,67,55,33,12,98
Then, the output should be:
['34', '67', '55', '33', '12', '98']
('34', '67', '55', '33', '12', '98')

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.
tuple() method can convert list to tuple

Solution:
data = input('Please give some numbers: ')
list = data.split(",")
tuple = tuple(list)
print(list)
print(tuple)


### Question 5
Level 1

Question:
Define a class which has at least two methods:
getString: to get a string from console input
printString: to print the string in upper case.
Also please include simple test function to test the class methods.

Hints:
Use __init__ method to construct some parameters

Solution:
class Mani_string:
    def __init__(self, string):
        self.string = string
    def getString(self):
        self.string = input("Enter a word: ")
    def printString(self):
        print(self.string.upper())
        
string_1 = Mani_string('hesnev')
string_1.getString()
string_1.printString()


### Question 6
Level 2

Question:
Write a program that calculates and prints the value according to the given formula:
Q = Square root of [(2 * C * D)/H]
Following are the fixed values of C and H:
C is 50. H is 30.
D is the variable whose values should be input to your program in a comma-separated sequence.
Example
Let us assume the following comma separated input sequence is given to the program:
100,150,180
The output of the program should be:
18,22,24

Hints:
If the output received is in decimal form, it should be rounded off to its nearest value (for example, if the output received is 26.0, it should be printed as 26)
In case of input data being supplied to the question, it should be assumed to be a console input. 

Solution:
import numpy as np

def Q(D, C=50, H=30):
    return round(np.sqrt((2*C*D)/H))

s = input("Please give some numbers: ")
l = s.split(",")

for i in l:
    i = int(i)
    print(Q(i), end=",")


### Question 7
Level 2

Question:
Write a program which takes 2 digits, X,Y as input and generates a 2-dimensional array. The element value in the i-th row and j-th column of the array should be i*j.
Note: i=0,1.., X-1; j=0,1,¡­Y-1.
Example
Suppose the following inputs are given to the program:
3,5
Then, the output of the program should be:
[[0, 0, 0, 0, 0], [0, 1, 2, 3, 4], [0, 2, 4, 6, 8]] 

Hints:
Note: In case of input data being supplied to the question, it should be assumed to be a console input in a comma-separated form.

Solution:
import numpy as np

X = 3
Y = 5

m = np.zeros((3,5))

for i in range(X):
    for j in range(Y):
        m[i,j]=i*j
        
print(m)


### Question 8
Level 2

Question:
Write a program that accepts a comma separated sequence of words as input and prints the words in a comma-separated sequence after sorting them alphabetically.
Suppose the following input is supplied to the program:
without,hello,bag,world
Then, the output should be:
bag,hello,without,world

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.

Solution:
s = input("Enter a list of words: ")
l = s.split(",")
for word in l:
    print(word, end=',')


### Question 9
Level 2

Question£º
Write a program that accepts sequence of lines as input and prints the lines after making all characters in the sentence capitalized.
Suppose the following input is supplied to the program:
Hello world
Practice makes perfect
Then, the output should be:
HELLO WORLD
PRACTICE MAKES PERFECT

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.

Solution:
s = input('Enter prases: ')
print(s.upper())


### Question 10
Level 2

Question:
Write a program that accepts a sequence of whitespace separated words as input and prints the words after removing all duplicate words and sorting them alphanumerically.
Suppose the following input is supplied to the program:
hello world and practice makes perfect and hello world again
Then, the output should be:
again and hello makes perfect practice world

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.
We use set container to remove duplicated data automatically and then use sorted() to sort the data.

Solution:
s = input('Enter words: ')
l = s.split(" ")
set_l = set(l)
#print(set_l)
list_l = sorted([word for word in set_l])
#print(list_l)
for word in list_l:
    print(word, end=" ")


### Question 11
Level 2

Question:
Write a program which accepts a sequence of comma separated 4 digit binary numbers as its input and then check whether they are divisible by 5 or not. The numbers that are divisible by 5 are to be printed in a comma separated sequence.
Example:
0100,0011,1010,1001
Then the output should be:
1010
Notes: Assume the data is input by console.

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.

Solution:
s = '0100,0011,1010,1001'
l = s.split(",")
value = []
for binary in l:
    val = 0
    for i in range(len(binary)):
        digit = int(binary[i])
        val += digit*(2**(3-i))
    if val % 5 == 0:
        print(binary, end=",")

### Question 12
Level 2

Question:
Write a program, which will find all such numbers between 1000 and 3000 (both included) such that each digit of the number is an even number.
The numbers obtained should be printed in a comma-separated sequence on a single line.

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.

Solution:
for value in range(1000, 3001):
    s = str(value)
    if (int(s[0])%2 == 0) and (int(s[1])%2 == 0) and (int(s[2])%2 == 0) and (int(s[3])%2 == 0):
        print(value, end=",")


### Question 13
Level 2

Question:
Write a program that accepts a sentence and calculate the number of letters and digits.
Suppose the following input is supplied to the program:
hello world! 123
Then, the output should be:
LETTERS 10
DIGITS 3

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.

Solution:
s = "hello world! 123"
l = s.split(' ')
items = []
for item in l:
    for i in range(len(item)):
        items.append(item[i])
#print(items)
letter_list = [item for item in items if item.isalpha() == True]
#print(letter_list)
num_list = [item for item in items if item.isdigit() == True]
#print(num_list)

print(f"LETTERS {len(letter_list)} DIGITS {len(num_list)}")


### Question 14
Level 2

Question:
Write a program that accepts a sentence and calculate the number of upper case letters and lower case letters.
Suppose the following input is supplied to the program:
Hello world!
Then, the output should be:
UPPER CASE 1
LOWER CASE 9

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.

Solution:
s = "Hello world!"
l = s.split(' ')
items = []
for item in l:
    for i in range(len(item)):
        items.append(item[i])
#print(items)
letter_list = [item for item in items if item.isalpha() == True]
#print(letter_list)
upper_list = [i for i in letter_list if i.upper()==i]
lower_list = [i for i in letter_list if i.lower()==i]
#print(upper_list)
#print(lower_list)
print(f"UPPER CASE {len(upper_list)} LOWER CASE {len(lower_list)}")


### Question 15
Level 2

Question:
Write a program that computes the value of a+aa+aaa+aaaa with a given digit as the value of a.
Suppose the following input is supplied to the program:
9
Then, the output should be:
11106

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.

Solution:
a = input("Enter a number between 1 and 9: ")
value = 0
for i in range(1, 5):
    num = b*i
    num = int(num)
    value += num
print(value)


### Question 16
Level 2

Question:
Use a list comprehension to square each odd number in a list. The list is input by a sequence of comma-separated numbers.
Suppose the following input is supplied to the program:
1,2,3,4,5,6,7,8,9
Then, the output should be:
1,3,5,7,9

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.

Solution:
[ i**2 for i in range(10) if i%2!=0]


### Question 17
Level 2

Question:
Write a program that computes the net amount of a bank account based a transaction log from console input. The transaction log format is shown as following:
D 100
W 200

D means deposit while W means withdrawal.
Suppose the following input is supplied to the program:
D 300
D 300
W 200
D 100
Then, the output should be:
500

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.

Solution:
s = "D 300 D 300 W 200 D 100"
l = s.split(" ")
#print(l)
sum = 0
for i in range(0,len(l),2):
    if l[i]=='D':
        sum += int(l[i+1])
    else:
        sum -= int(l[i+1])      
print(sum)


### Question 18
Level 3

Question:
A website requires the users to input username and password to register. Write a program to check the validity of password input by users.
Following are the criteria for checking the password:
1. At least 1 letter between [a-z]
2. At least 1 number between [0-9]
1. At least 1 letter between [A-Z]
3. At least 1 character from [$#@]
4. Minimum length of transaction password: 6
5. Maximum length of transaction password: 12
Your program should accept a sequence of comma separated passwords and will check them according to the above criteria. Passwords that match the criteria are to be printed, each separated by a comma.
Example
If the following passwords are given as input to the program:
ABd1234@1,a F1#,2w3E*,2We3345
Then, the output of the program should be:
ABd1234@1

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.



### Question 19
Level 3

Question:
You are required to write a program to sort the (name, age, height) tuples by ascending order where name is string, age and height are numbers. The tuples are input by console. The sort criteria is:
1: Sort based on name;
2: Then sort based on age;
3: Then sort by score.
The priority is that name > age > score.
If the following tuples are given as input to the program:
Tom,19,80
John,20,90
Jony,17,91
Jony,17,93
Json,21,85
Then, the output of the program should be:
[('John', '20', '90'), ('Jony', '17', '91'), ('Jony', '17', '93'), ('Json', '21', '85'), ('Tom', '19', '80')]

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.
We use itemgetter to enable multiple sort keys.

Solution:


### Question 20
Level 3

Question:
Define a class with a generator which can iterate the numbers, which are divisible by 7, between a given range 0 and n.

Hints:
Consider use yield

Solution:


### Question 21
Level 3

Question
A robot moves in a plane starting from the original point (0,0). The robot can move toward UP, DOWN, LEFT and RIGHT with a given steps. The trace of robot movement is shown as the following:
UP 5
DOWN 3
LEFT 3
RIGHT 2
¡­
The numbers after the direction are steps. Please write a program to compute the distance from current position after a sequence of movement and original point. If the distance is a float, then just print the nearest integer.
Example:
If the following tuples are given as input to the program:
UP 5
DOWN 3
LEFT 3
RIGHT 2
Then, the output of the program should be:
2

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.

Solution:


### Question 22
Level 3

Question:
Write a program to compute the frequency of the words from the input. The output should output after sorting the key alphanumerically. 
Suppose the following input is supplied to the program:
New to Python or choosing between Python 2 and Python 3? Read Python 2 or Python 3.
Then, the output should be:
2:2
3.:1
3?:1
New:1
Python:5
Read:1
and:1
between:1
choosing:1
or:2
to:1

Hints
In case of input data being supplied to the question, it should be assumed to be a console input.

Solution:
from collections import Counter
s = "New to Python or choosing between Python 2 and Python 3? Read Python 2 or Python 3."
l = s.split(" ")
l = sorted(l)

count = Counter(l)
count_dict = dict(count)
for key, value in count_dict.items():
    print(f"{key}:{value}", end=" ")


### Question 23
level 1

Question:
Write a method which can calculate square value of number

Hints:
Using the ** operator

Solution:
class Square:
    def __init__(self, n):
     self.n = n
    def square(self):
        print(self.n ** 2)

p = Square(5)
p.square()


### Question 24
Level 1

Question:

Python has many built-in functions, and if you do not know how to use it, you can read document online or find some books. But Python has a built-in document function for every built-in functions.

Please write a program to print some Python built-in functions documents, such as abs(), int(), raw_input()

And add document for your own function
Hints:
The built-in document method is __doc__

Solution:
print(abs.__doc__)
print(int.__doc__)
print(raw_input.__doc__)


### Question 25
Level 1

Question:
Define a class, which have a class parameter and have a same instance parameter.

Hints:
Define a instance parameter, need add it in __init__ method
You can init a object with construct parameter or set the value later

Solution:
class Something:
    def __init__(self, something):
        self.something = something

p = Something('important')
print(p.something)


### Question 26:
Define a function which can compute the sum of two numbers.

Hints:
Define a function with two numbers as arguments. You can compute the sum in the function and return the value.

Solution:
def sum(a,b):
    return a+b
print(sum(2,3))


### Question 27
Define a function that can convert a integer into a string and print it in console.

Hints:

Use str() to convert a number to string.

Solution:
def cvert(n):
    print("This is a string of " + str(n))
cvert(6)


### Question 28
Define a function that can convert a integer into a string and print it in console.

Hints:

Use str() to convert a number to string.

Solution:
# same as question 27

### Question 29
Define a function that can receive two integral numbers in string form and compute their sum and then print it in console.

Hints:

Use int() to convert a string to integer.

Solution:
def sum_two(a,b):
    print(int(a)+int(b))

sum_two('1','2')


### Question 30
Define a function that can accept two strings as input and concatenate them and then print it in console.

Hints:

Use + to concatenate the strings

Solution:
def conc(a,b):
    print(a+b)
conc('i love', ' cambodia')


### Question 31
Define a function that can accept two strings as input and print the string with maximum length in console. If two strings have the same length, then the function should print al l strings line by line.

Hints:

Use len() function to get the length of a string

Solution:
def print_s(a,b):
    if len(a) < len(b):
        print(b)
    elif len(a) > len(b):
        print(a)
    else:
        print(a)
        print(b)
print_s('i love', 'cabmobodia')


### Question 32
Define a function that can accept an integer number as input and print the "It is an even number" if the number is even, otherwise print "It is an odd number".

Hints:

Use % operator to check if a number is even or odd.

Solution:
def even_odd(n):
    if n%2==0:
        print("It is an even number")
    else:
        print("It is an odd number")      
even_odd(7)


### Question 33
Define a function which can print a dictionary where the keys are numbers between 1 and 3 (both included) and the values are square of keys.

Hints:

Use dict[key]=value pattern to put entry into a dictionary.
Use ** operator to get power of a number.

Solution:
def print_dic(n):
    dic = {}
    for i in range(1,n+1):
        dic[i] = i**2
    print(dic)
print_dic(3)


### Question 34
Define a function which can print a dictionary where the keys are numbers between 1 and 20 (both included) and the values are square of keys.

Hints:

Use dict[key]=value pattern to put entry into a dictionary.
Use ** operator to get power of a number.
Use range() for loops.

Solution:
def print_dic(n):
    dic = {}
    for i in range(1,n+1):
        dic[i] = i**2
    print(dic)
print_dic(20)


### Question 35
Define a function which can generate a dictionary where the keys are numbers between 1 and 20 (both included) and the values are square of keys. The function should just print the values only.

Hints:

Use dict[key]=value pattern to put entry into a dictionary.
Use ** operator to get power of a number.
Use range() for loops.
Use keys() to iterate keys in the dictionary. Also we can use item() to get key/value pairs.

Solution:
def print_dic(n):
    dic = {}
    for i in range(1,n+1):
        dic[i] = i**2
    for i in range(1, n+1):
        print(dic[i], end=",")
print_dic(10)


### Question 36
Define a function which can generate a dictionary where the keys are numbers between 1 and 20 (both included) and the values are square of keys. The function should just print the keys only.

Hints:

Use dict[key]=value pattern to put entry into a dictionary.
Use ** operator to get power of a number.
Use range() for loops.
Use keys() to iterate keys in the dictionary. Also we can use item() to get key/value pairs.

Solution:
def print_dic(n):
    dic = {}
    for i in range(1,n+1):
        dic[i] = i**2
    for value in dic.keys():
        print(value, end=",")
print_dic(10)


### Question 37
Define a function which can generate and print a list where the values are square of numbers between 1 and 20 (both included).

Hints:

Use ** operator to get power of a number.
Use range() for loops.
Use list.append() to add values into a list.

Solution:
def sq(n):
    l = [i**2 for i in range(1,n+1)]
    print(l)
sq(10)


### Question 38
Define a function which can generate a list where the values are square of numbers between 1 and 20 (both included). Then the function needs to print the first 5 elements in the list.

Hints:

Use ** operator to get power of a number.
Use range() for loops.
Use list.append() to add values into a list.
Use [n1:n2] to slice a list

Solution:
def sq(n):
    l = []
    for i in range(1,n+1):
        l.append(i**2)
    print(l[:5])   
sq(10)



### Question 39
Define a function which can generate a list where the values are square of numbers between 1 and 20 (both included). Then the function needs to print the last 5 elements in the list.

Hints:

Use ** operator to get power of a number.
Use range() for loops.
Use list.append() to add values into a list.
Use [n1:n2] to slice a list

Solution:
def sq(n):
    l = []
    for i in range(1,n+1):
        l.append(i**2)
    print(l[-5:])   
sq(10)


### Question 40
Define a function which can generate a list where the values are square of numbers between 1 and 20 (both included). Then the function needs to print all values except the first 5 elements in the list.

Hints:

Use ** operator to get power of a number.
Use range() for loops.
Use list.append() to add values into a list.
Use [n1:n2] to slice a list

Solution:
def sq(n):
    l = []
    for i in range(1,n+1):
        l.append(i**2)
    print(l[5:]) 
sq(15)


### Question 41
Define a function which can generate and print a tuple where the value are square of numbers between 1 and 20 (both included). 

Hints:

Use ** operator to get power of a number.
Use range() for loops.
Use list.append() to add values into a list.
Use tuple() to get a tuple from a list.

Solution:
def sq(n):
    l = []
    for i in range(1,n+1):
        l.append(i**2)
    t = tuple(l)
    print(t) 
sq(10)


### Question 42
With a given tuple (1,2,3,4,5,6,7,8,9,10), write a program to print the first half values in one line and the last half values in one line. 

Hints:

Use [n1:n2] notation to get a slice from a tuple.

Solution:
t = (1,2,3,4,5,6,7,8,9,10)
print(t[:5])
print(t[-5:])


### Question 43
Write a program to generate and print another tuple whose values are even numbers in the given tuple (1,2,3,4,5,6,7,8,9,10). 

Hints:

Use "for" to iterate the tuple
Use tuple() to generate a tuple from a list.

Solution:
t = (1,2,3,4,5,6,7,8,9,10)
for i in t:
    if i%2==0:
        print(i, end=",")


### Question 44
Write a program which accepts a string as input to print "Yes" if the string is "yes" or "YES" or "Yes", otherwise print "No". 

Hints:

Use if statement to judge condition.

Solution:
def Yesf(s):
    if s.lower() == "yes":
        print('Yes')
    else:
        print('No')
Yesf('Yes')
Yesf('YES')
Yesf('yes')
Yesf('yoyo')


### Question 45
Write a program which can filter even numbers in a list by using filter function. The list is: [1,2,3,4,5,6,7,8,9,10].

Hints:

Use filter() to filter some elements in a list.
Use lambda to define anonymous functions.

Solution:
l = [1,2,3,4,5,6,7,8,9,10]
f = list(filter(lambda x: x%2==0, l))
print(f)


### Question 46
Write a program which can map() to make a list whose elements are square of elements in [1,2,3,4,5,6,7,8,9,10].

Hints
Use map() to generate a list.
Use lambda to define anonymous functions.

Solution:
l = [1,2,3,4,5,6,7,8,9,10]
m = list(map(lambda x: x**2, l))
print(m)


### Question 47
Write a program which can map() and filter() to make a list whose elements are square of even number in [1,2,3,4,5,6,7,8,9,10].

Hints
Use map() to generate a list.
Use filter() to filter elements of a list.
Use lambda to define anonymous functions.

Solution:
l = [1,2,3,4,5,6,7,8,9,10]
f = list(filter(lambda x: x%2==0, l))
m = list(map(lambda x: x**2, f))
print(m)


### Question 48
Write a program which can filter() to make a list whose elements are even number between 1 and 20 (both included).

Hints:

Use filter() to filter elements of a list.
Use lambda to define anonymous functions.

Solution:
n = 50
l = list(range(1,n+1))
f = filter(lambda x: x%2==0 and x<=20, l)
print(list(f))


### Question 49
Write a program which can map() to make a list whose elements are square of numbers between 1 and 20 (both included).

Hints
Use map() to generate a list.
Use lambda to define anonymous functions.

Solution:
n = 50
l = list(range(1,n+1))
f = filter(lambda x: x<=20, l)
m = map(lambda x: x**2, f)
print(list(m))


### Question 50
Define a class named American which has a static method called printNationality.

Hints:
Use @staticmethod decorator to define class static method.

Solution:
class American:
    @staticmethod
    def printNationality(nationality):
        print(nationality)
American.printNationality('Cambodia')

### Question 51
Define a class named American and its subclass NewYorker. 

Hints:

Use class Subclass(ParentClass) to define a subclass.

Solution:
class American:
    @staticmethod
    def printNationality(nationality):
        print(nationality)
class NewYorker(American):
    pass
NewYorker.printNationality('Canada')



### Question 52
Define a class named Circle which can be constructed by a radius. The Circle class has a method which can compute the area. 

Hints:

Use def methodName(self) to define a method.

Solution:
import math 

class Circle:
    def __init__(self, radius):
        self.radius = radius
    def area(self):
        area = math.pi * self.radius ** 2
        print(area)  
c1 = Circle(5)
c2 = Circle(10)
c1.area()
c2.area()


### Question 53
Define a class named Rectangle which can be constructed by a length and width. The Rectangle class has a method which can compute the area. 

Hints:

Use def methodName(self) to define a method.

Solution:
class Rectangle:
    def __init__(self, length, width):
        self.length = length
        self. width = width
    def area(self):
        area = self.length * self.width
        print(area)
r1 = Rectangle(10,20)
r1.area()


### Question 54
Define a class named Shape and its subclass Square. The Square class has an init function which takes a length as argument. Both classes have a area function which can print the area of the shape where Shape's area is 0 by default.

Hints:

To override a method in super class, we can define a method with the same name in the super class.

Solution:
class Shape:
    def __init__(self, width, length):
        self.width = width
        self.length = length
    def area(self):
        area = self.width * self.length
        print(area)
class Square(Shape):
    def __init__(self, length):
        self.length = length
    def area(self):
        area = self.length ** 2
        print(area)
r1 = Shape(2,3)
r1.area()
s1 = Square(5)
s1.area()


### Question 55
Please raise a RuntimeError exception.

Hints:

Use raise() to raise an exception.

Solution:
x = 0
if x==0:
    raise RuntimeError("Do not except null!") 


### Question 56
Write a function to compute 5/0 and use try/except to catch the exceptions.

Hints:

Use try/except to catch exceptions.

Solution:


### Question 57
Define a custom exception class which takes a string message as attribute.

Hints:

To define a custom exception, we need to define a class inherited from Exception.

Solution:


### Question 58
Assuming that we have some email addresses in the "username@companyname.com" format, please write program to print the user name of a given email address. Both user names and company names are composed of letters only.

Example:
If the following email address is given as input to the program:

john@google.com

Then, the output of the program should be:

john

In case of input data being supplied to the question, it should be assumed to be a console input.

Hints:

Use \w to match letters.

Solution:


### Question 59
Assuming that we have some email addresses in the "username@companyname.com" format, please write program to print the company name of a given email address. Both user names and company names are composed of letters only.

Example:
If the following email address is given as input to the program:

john@google.com

Then, the output of the program should be:

google

In case of input data being supplied to the question, it should be assumed to be a console input.

Hints:

Use \w to match letters.

Solution:


### Question 60
Write a program which accepts a sequence of words separated by whitespace as input to print the words composed of digits only.

Example:
If the following words is given as input to the program:

2 cats and 3 dogs.

Then, the output of the program should be:

['2', '3']

In case of input data being supplied to the question, it should be assumed to be a console input.

Hints:

Use re.findall() to find all substring using regex.

Solution:
s = "2 cats and 3 dogs"
l = s.split(" ")
n = [i for i in l if i.isdigit() == True]
print(n)


